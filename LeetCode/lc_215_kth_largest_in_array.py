import heapq

from typing import List

from utils import DoublyListNode
"""
    --medium--
    https://leetcode.com/problems/kth-largest-element-in-an-array/
    Given an integer array nums and an integer k, return the kth largest element in the array witohut sorting
    Note that it is the kth largest element in the sorted order, not the kth distinct element.
    
"""



class Solution:
    def findKthLargest(self, nums: List[int], k: int) -> int:
        """
        Using inbuilt heap structure, but only using k number of items at once,
        Hence the result will have a time complexity of n log k

        Runtime: 83%
        Memory: 70%

        """
        nums_k = nums[:k]
        heapq.heapify(nums_k)
        for i in range(k, len(nums)):
            if nums[i] > nums_k[0]:
                heapq.heappushpop(nums_k, nums[i])

        return nums_k[0]

    def findKthLargest2(self, nums: List[int], k: int) -> int:
        """
            Using Doubly linked list
            Runtime: Times out
        """

        def add_item_to_dll(item:int):
            nonlocal dll_end, dll_start, dll_size

            new_node = DoublyListNode(item)
            if item < dll_start.val:
                if item >= dll_end.val:
                    dll_point = dll_start
                    while dll_point.val > item:
                        dll_point = dll_point.next
                    new_node.previous = dll_point.previous
                    dll_point.previous.next = new_node
                    new_node.next = dll_point
                    dll_point.previous = new_node
                else:
                    dll_end.next = new_node
                    new_node.previous = dll_end
                    dll_end = new_node
            elif item >= dll_start.val:
                new_node.next = dll_start
                dll_start.previous = new_node
                dll_start = new_node

            if dll_size < k:
                dll_size += 1
            else:
                dll_end = dll_end.previous
                dll_end.next = None

        dll_size = 1
        dll_start = dll_end = None
        if nums:
            dll_start = dll_end = DoublyListNode(nums[0])
        for i in range(1, len(nums)):
            add_item_to_dll(nums[i])

        return dll_end.val


    def quick_sort_like_algo(self, nums: List[int], k: int, start, end):
        pivot = end - 1
        back = start-1
        front = start
        while front < pivot:
            if nums[front] <= nums[pivot]:
                back += 1
                nums[back], nums[front] = nums[front], nums[back]
            front += 1
        back = back+1
        nums[back], nums[pivot] = nums[pivot], nums[back]
        if back == k:
            return nums[back]
        elif back < k:
            return self.quick_sort_like_algo(nums, k, back+1, end)
        else:
            return self.quick_sort_like_algo(nums, k, start, back)

    def findKthLargest3(self, nums: List[int], k: int) -> int:
        """
            This answer is derived from neetcode.
            This algorithm is derived from quick sort, called the 'quick select' algorithm.
            Runtime: times out.
        """
        k = len(nums)-k
        return self.quick_sort_like_algo(nums, k, 0, len(nums))


kk = [6121,-586,4548,8784,-705,5601,1434,1014,1085,4746,-2721,7498,-3498,2388,-9161,9430,8,1043,9499,6131,-5280,1843,8495,4565,8340,-989,-550,3576,-240,2402,-8799,-1955,-5938,2484,-1585,3065,-2591,4739,9810,2313,3496,-7257,-9462,-249,4741,8215,-552,3214,1396,-9782,4324,1591,-2894,9743,1459,-2065,846,3670,6597,887,-9829,4247,-8752,-5478,9405,8629,2710,6900,9171,-4649,-1626,6226,-4615,-5876,-6806,2769,-708,-4612,-5405,-188,-2992,-4258,4758,-4178,8566,-8975,185,-3940,-3711,9775,-1614,8153,9307,6128,6902,-2788,8893,7414,-6587,1284,3254,-1150,-4665,-9101,-2306,-8262,6869,619,-2629,4382,468,4956,-1185,-3708,8184,-3417,9242,-9046,4225,3072,-1080,-1519,-9345,-4645,3211,-7213,3493,-7382,6609,-7455,-5459,2368,-3557,-25,822,-4666,2084,-1181,2594,-6967,-3490,-3806,1818,-8612,-7366,5932,7883,2950,8526,-7332,-7130,-4942,-2695,-6916,-5445,-2016,7232,-6940,-8879,6508,-7722,-1409,-9001,3245,-5077,6875,-9019,-5593,-8236,7108,-5713,3577,5744,4671,8069,1199,-5323,1044,3051,8579,-6386,3669,7951,-9805,-5030,-1529,-4804,-2293,3329,-2566,-960,-9014,-7045,7597,3293,8196,-8562,3267,-8646,-8670,4371,5576,-1178,-7457,-8597,2410,3894,9327,7271,2826,-8989,-7101,-6955,-2010,5473,126,352,-5347,-913,6919,-5066,-808,790,-1032,6596,-5794,-4338,-3443,-8306,9907,-2573,-8803,-9684,-1069,-9314,431,-224,-464,4855,3357,7150,3854,168,-6741,-4477,2794,-8336,-2178,3381,5088,-3889,9200,-6853,-1348,-6962,1401,-1055,-8995,3306,-3491,-3966,-7325,-1278,3049,886,2989,-5327,-7838,-5780,-8488,6857,-1603,-9875,-6024,-6397,6978,2566,-8710,6760,-1069,5387,-7224,-645,198,594,364,-3651,9279,-6763,-5311,-1934,-6870,6239,9970,5421,-4963,4945,-6362,7380,1854,4254,9991,9124,8749,-2148,-6148,-4382,-427,942,1977,8906,6568,-3082,-3264,5524,-3060,9020,-3234,7221,6663,-2956,-2454,-5382,2971,-6282,-7211,4077,2486,-723,-4127,9401,2125,-2761,-9423,-6613,5406,-8420,9816,817,669,-2594,-5782,-6781,6120,9673,8293,1744,-5612,4270,-4861,-5077,-2789,-5427,-2455,-1980,-2209,2006,-3491,5108,-5814,7286,2670,-6975,-1700,-8644,-8781,-7704,-5124,-5685,4833,6065,-859,-6377,-5100,-9591,-1360,9557,3292,8875,-3139,4101,-1482,5124,-57,-8582,-6383,-8691,6673,519,-5510,-4775,-7957,-8562,-5219,-4365,7839,-7588,7841,-3651,1137,-5681,5752,-2759,8669,-2542,-4324,9926,-7237,6249,9787,-7973,288,58,-6014,-8067,-2216,5447,7656,-781,-4921,8316,-7716,2421,-7687,-6219,3489,-4916,-3898,2756,-8096,384,9413,8910,1238,2933,6280,-6281,7536,-6546,469,-4244,9536,9152,2768,-5818,7573,4643,4709,3185,-3503,-5732,-5696,7913,2737,7348,4236,4642,-2650,2669,-9177,-4853,-9823,4000,1103,-5658,-422,7564,-3018,-8849,5800,-1673,7835,-9326,-4001,-1213,-4913,-9198,-5016,-524,-7913,-6253,-3262,1294,5115,3088,5125,-2522,1123,8674,8730,-6329,-7373,-6769,-5762,2865,8927,-1743,367,4414,2460,9974,-8322,-9387,9745,8579,-8156,-28,-9214,1255,-1511,-7218,-8474,3834,-8558,171,-4749,7988,6921,493,-4509,-2767,7764,-6562,-2622,-5092,-7148,-9067,-1250,-1424,-3974,-6759,-516,3408,5796,4665,4858,6967,6912,4194,-4058,9234,-2895,-5787,296,1151,7616,-2610,-2420,-2501,1591,-9317,-883,6985,-4623,-3593,-344,-4670,4007,3304,-2669,-7186,7530,-8712,7326,1439,8430,-8953,-5489,8391,-735,5958,1376,9937,-887,3683,7547,127,-1726,4535,5835,-9644,6727,-4535,2039,-2182,8941,-1313,-1917,-4703,-7061,-8713,6007,-2120,9339,-2925,7877,-4836,-5117,4795,2179,1325,2484,-5940,5824,-5314,1038,2131,7183,5369,3933,-9018,7731,8894,-184,-3499,-6283,-4705,-930,3448,4700,-4597,-9596,9675,-709,-346,5945,-446,-3611,3691,3670,2330,6740,8874,-9909,-7444,-6936,-8048,-162,-4846,-931,-2342,-5255,7773,-2165,-526,-309,-3010,-6086,-772,-5382,4448,-779,-8670,-4781,4285,1972,1231,8151,-3994,7632,5284,1890,7252,8605,-9943,9295,9616,-5018,3914,8167,-5319,-4423,974,-7071,-7930,7085,6591,1766,-4863,-5580,-216,-8990,6206,-1594,-4828,1087,-2411,-6152,2332,-5913,3879,-6212,1802,-3898,5493,4879,-4754,8627,9556,-3422,510,2352,2624,-1730,4083,4248,8644,7983,-1810,-8228,9000,7873,9578,70,-9476,2133,-2383,893,-5859,787,4515,-4720,-3297,-1172,-9961,-9506,7765,554,-3500,2213,-6928,4582,9128,2308,-5513,6188,3634,1640,3130,7966,4279,8501,-3076,4224,282,-8841,8032,-9715,-4939,-2856,965,331,8864,-3750,-794,-4459,-7756,6705,-8032,-8801,7210,8819,-9784,-7621,5965,-9314,3626,-1836,-1258,-9977,-2690,3757,1147,8197,-1115,-8739,-2824,-8402,-5931,2220,-7930,3834,4379,3743,-2151,9134,-9984,-6979,-5577,5252,9511,945,-1630,3961,8713,1510,-7367,-3613,-9737,-3632,-4823,4643,1738,-2972,4426,1858,-7103,5181,6604,-7013,938,3361,8642,-953,-9891,3417,4308,-8655,8411,709,-873,-244,-3968,-7411,5429,-219,4084,-631,3899,-2149,2742,-3870,-9707,-7747,3540,-7051,6913,-1901,3624,3022,7268,5802,-1298,-5374,4209,-3587,-6852,-3587,4255,-1545,-2148,2122,-5661,9075,-2474,-3064,-9419,-8903,3829,7131,-5648,447,-6614,3886,-508,4007,-9268,9753,-2724,-268,8067,6788,-6878,7885,-9633,2331,-5823,-856,1424,4130,-483,-2392,9885,4959,-5403,-1656,3427,4560,2998,4199,-1165,-9651,-2472,-87,9681,9557,3861,-5254,-683,-2218,4879,3311,2922,-7718,4137,-5293,6683,1996,-5323,5093,6730,9939,-5572,4599,-7872,-9195,161,-1730,7672,-900,9954,-1410,9708,9485,339,2980,-4934,-7789,-7262,3759,1047,6168,-2180,7606,-9662,646,-6929,-1796,-5035,4668,-6078,-8367,-1504,-9307,-4705,-7934,-4346,-4821,-5603,-7548,5924,6800,-6574,-3081,-3892,-6509,8157,6117,5731,-9189,824,-939,-371,-421,2421,-1473,1260,3888,-5242,-851,-6522,-1850,8707,3131,-1287,-4776,-4698,4528,-432,73,-3031,-8013,3692,5331,-9646,-1892,6235,-7522,-5841,-8550,-3625,73,1157,-8712,-1642,8236,4164,-996,-4911,5249,-8239,3025,-7690,-690,-159,7885,7580,1044,-4710,3244,3710,-2409,8073,-1802,4969,-1219,-8413,-4259,-8926,-4693,-788,-983,-1625,-2665,2919,-1541,-5139,-9267,-1284,-6860,9289,9330,7882,6967,-5055,7741,-4970,3556,-780,-190,362,4536,-9625,4798,-5085,7857,-7365,-9973,3162,-6292,5324,6028,-8184,4673,-4117,6551,4347,3231,-6333,4953,-3871,5925,-9514,-2220,-4229,-969,-6234,9815,8454,-2013,-904,-2210,3988,5552,-2595,4408,9898,-6097,3930,-1298,-7619,7691,-3899,2636,2586,-7780,-9923,-4989,2638,-7014,2015,4902,4086,1238,1706,3691,-9199,-9986,3937,-5390,2765,-9907,9232,-2996,-3505,8730,3542,-9559,3404,-8769,-9540,4095,7928,-467,2367,5948,9536,-5916,1005,5111,-4650,-745,-4580,4708,7617,706,8699,-2267,7602,3940,4387,9904,-9394,-2076,5545,2312,8735,8229,-8805,-9297,8790,-350,1261,9052,-6498,-6851,-8191,2050,-5917,-4532,-418,3579,-2168,7976,-7672,2128,-1701,5621,212,2324,125,6816,-9456,-6821,7929,6200,4207,-5313,-7953,-3038,8315,-3742,-1452,1276,2589,9398,-6285,9500,6290,5839,-8995,-1180,6657,-5338,-9987,1342,-7764,4230,4597,-6657,-2050,4551,-571,-7469,-5126,-6897,-2107,-4696,960,447,-7644,6835,-1458,9466,4610,3204,6482,7916,-8825,-9934,1755,-3443,-1632,-9331,-7502,289,-6834,7198,-6708,9149,3014,-2766,7441,-3193,5757,-3774,-4697,8604,-9707,4838,-7142,7885,4503,-1859,-1772,-841,6170,-6848,5816,-7329,-216,3723,-2912,-3793,7341,5855,9081,6970,8571,-9184,4626,6091,-6788,-6548,1252,-4971,-1071,7146,-3502,4729,6254,9546,-7497,-2231,7226,-1,-2567,7000,926,9123,-9544,-5101,9123,-7310,-6016,6177,-9395,-3849,9893,4769,-7422,394,-6550,6318,-7541,2340,-5840,4492,-1303,-2207,2123,6017,8127,7816,3659,-6071,9277,-3782,-4945,-9472,6490,8103,-5548,4399,8363,-1238,-9,5259,4962,-9812,-5595,-8975,1627,-3488,4600,-669,-2337,2134,-8701,-277,3646,3829,-5856,544,4088,9856,8763,-5640,5563,5330,-8120,3290,-3137,2737,-7480,-5514,-607,-5411,-8094,-109,5930,-4338,-7036,-2512,-726,-621,8960,6644,8823,-2066,8795,-8203,-3387,5413,-5948,3895,6225,3724,-1015,7525,-8773,-580,1504,-7135,-999,-3234,9061,-500,1027,7391,5378,-9446,647,2189,3128,-9281,-6043,-7775,1742,-7121,-5857,-2363,8466,-1531,-5194,-2615,7060,2821,-264,2669,-7397,-5725,3726,-7881,2885,9141,-6353,-1065,-109,-1056,757,-4251,3136,2901,2037,1316,-8951,-3399,-2062,6707,-420,1898,4570,-9029,8098,-8576,4122,-7946,1415,-5111,-6084,8754,1249,-5173,-5427,9847,-2226,-806,3521,-5218,7667,-3853,-9624,-2073,-9968,3792,6478,-2295,6531,-3617,1082,-6752,-8431,3139,-1300,9925,4891,-6347,3282,-6150,-1428,-7867,-937,-2043,-367,8936,-959,-2402,-1890,-9989,8373,9184,-4201,2582,-3814,1576,6904,-1366,6263,8389,-2848,1921,5194,2520,4344,8883,1326,1123,5370,-8245,2093,-851,-8479,-4791,4625,8131,-1622,-186,913,-2432,-3979,1538,-329,6120,-6615,7583,4987,5306,5332,-7836,3287,385,-7658,8988,8066,8121,-5759,9109,8468,-9640,-5581,-600,8903,-7889,-9724,2840,-3719,-9718,-7109,-5819,-7257,-9033,-7878,3756,1161,-5985,9501,-8213,-6452,8724,3122,4768,-2920,8688,4098,-2030,5626,6009,-4833,-4594,2872,-291,-6369,-2709,-4427,7472,1507,-3228,-1352,2182,-8038,3270,-6671,2973,-1311,9490,8074,-6746,-9601,-82,4901,7381,3039,-2767,3389,-6766,6489,-4552,4273,1758,-7640,-8224,-8181,-1086,4611,2718,2522,9690,-1516,-4738,-5113,-8511,3383,-8738,4835,3607,7460,-3378,-7509,-537,-1506,2721,-5668,-9957,-2068,-9239,-1042,-3007,-14,-5527,2725,8668,-973,7745,-2504,-6926,3685,6586,197,-6063,3760,3050,8758,-8440,-1812,-3535,6303,8988,-4352,-2113,-2090,-914,-8741,-9722,-2014,1223,5026,104,1976,5482,-4309,-3436,5079,6063,-45,-9804,-2934,-8844,9963,-5108,-7278,-4459,-3580,-6717,4112,-1028,7130,-2249,1632,-1030,2680,-2946,4214,-9695,1629,-7451,-6521,-3369,-7911,-9646,-5768,6980,9796,-4166,878,-3800,-9119,-1179,-5334,3346,7313,4279,-2010,-7105,5392,-9833,3864,-7873,-9136,7463,-7259,-1396,2090,-3598,-3307,9718,-7577,9664,-2358,-951,-9763,-6839,1744,-6784,3873,-9348,-3197,-4360,-4056,2399,-3301,-5419,-8432,-7969,-1587,-2309,4427,1304,8056,6670,-1305,-5556,-4046,3612,7252,-9221,2246,-3462,8601,-9865,-9237,5956,4878,9517,-4721,-2782,-5269,6214,-1372,501,-5042,-4117,-8160,-1253,6557,-4828,3563,7039,-2941,-1285,3544,3472,3340,-5232,3705,2333,-5285,3613,-6475,-4526,731,2694,2168,-821,-3027,4528,2616,2416,-2890,5973,3024,-5881,46,7209,-8758,2646,-2501,-9774,-4562,-1786,-1440,-3402,1802,-2500,-597,2393,-7120,-2569,-2742,-2437,2703,-6236,9250,-7006,-8305,-5735,-5103,-7321,-9652,4496,8916,-20,-7567,-8960,-9983,841,-3743,6684,-3793,-9850,-5909,-3644,-9774,-9790,-8863,-4127,-9188,8511,-9556,-4267,-724,6944,1124,262,-3801,-3640,-9328,3500,-8672,-8454,-7636,4100,6890,5937,-2427,-5576,-6661,-3523,-10,-6418,-5617,8884,5168,5227,4368,64,2991,1615,1477,-1354,3544,529,5983,-6222,-7922,-80,6011,5273,7986,2206,4502,-2242,-1579,-450,8996,9462,7998,5918,-2417,-4918,2387,441,506,8868,-5163,-6087,-6061,-6365,9239,-5484,-4699,8015,-2689,3856,7998,-7401,922,7081,-5012,-478,244,5555,-8612,8461,-3604,7507,-8765,7035,-5326,-7272,-6877,3889,5864,6878,-2632,-7261,2458,-7257,-7888,-9027,-7874,-5103,5696,-4055,997,6314,9021,2210,163,6868,3007,9887,-7012,-1083,-5939,-6185,7047,-8322,8178,-6709,459,-3158,-9221,5984,2657,-5808,-1219,6520,3695,-6802,7923,601,-1280,-7754,9285,6982,-9612,-9975,2628,-9145,1922,2703,-2075,430,-8040,8151,2039,-8790,-7666,9920,-6527,4255,-5855,-905,1320,7468,-7857,-3508,-6775,4738,9338,-7481,7893,4186,1334,90,3235,6304,5516,-6105,-6261,-4643,-6868,1856,-4652,-2997,-3418,-5632,3099,-7006,1223,-952,3978,-2809,-1515,8169,1878,4169,8217,-3954,-2497,9226,-8990,-9440,9188,-2967,-4703,7023,-8369,4937,-3848,3489,9442,-7767,9531,-6953,-1931,-4,4017,5374,8102,8792,-5869,-6025,-2486,-2878,2455,1765,-9822,-8099,3040,106,-5798,582,6751,-9138,9715,96,-633,-9733,3537,4411,43,-3551,-8286,9594,15,-9335,1233,6749,-4007,4124,-9918,-2001,-8831,-5105,-9425,-7114,6385,-8212,713,718,461,-6589,-2917,-1339,-2582,6503,-1036,-2805,-5084,671,-4348,5343,7540,5538,2729,-2044,-870,8229,-6163,-8340,8792,6584,8901,4326,-1238,8461,9613,-4610,-5720,-2376,2724,-3392,-6373,-8779,-7270,-2679,4942,365,-1379,31,-9550,-8467,7718,-6135,9844,-9658,-7314,-8275,3107,-418,-461,-5200,-1213,269,8672,-4702,9224,1775,5632,6425,9514,597,6034,9738,-2352,5217,-8161,192,2580,9757,6884,5521,5437,6613,-5464,-8463,1599,-1441,-7905,-9300,8838,8246,-3037,-803,-5912,5598,4150,-5315,3828,-3900,-6998,8230,-8502,-5523,-1191,-4075,-5693,-9140,-9645,-4548,8221,3247,-9898,-7751,8293,123,-3416,8905,1325,3298,9886,763,-8259,991,3449,-9779,6963,4791,-2838,-5038,-8689,-5221,-427,7825,-1118,-5416,-2378,7934,-2094,-781,-3495,-570,-1617,7842,-9912,-9685,2285,-7953,-8125,5064,6449,-2656,9839,3696,-7310,1577,-9912,-1034,9300,1878,3254,-8798,6223,-267,2478,2823,1979,9258,-7087,-6598,7610,6252,-7317,5496,-6826,-6788,-1718,1279,9791,-421,1672,83,-5042,4518,3209,2586,-1822,-616,-3337,-1017,-4332,8458,-159,9720,4216,6952,2146,3624,-2066,-6292,-4481,-7715,9114,-9786,1872,-7735,9992,8687,-1993,-4184,1967,-4337,1889,-6299,-6454,9389,3016,2739,4530,8185,9341,-1048,-3926,748,-2174,-4527,317,-2643,8607,-8001,620,9445,-9315,3087,7172,-8496,7965,3829,-5528,-3324,1099,-9515,5280,-1958,1239,-5835,-6595,-8713,-7522,2110,4036,-1450,1631,-8904,5116,7058,-6723,-7121,-2,3725,3118,273,-5905,-399,-5004,694,4463,-5737,-1512,8292,5594,6413,-6099,-1153,-6233,-1382,2158,13,-9837,-9345,-1024,9747,-2620,-1014,6234,-2223,7823,7449,400,6361,-9389,-8956,5432,6259,-723,2941,-7311,9402,-938,7977,-6087,8951,8440,8850,5535,6026,-2009,6539,6329,685,-1387,9158,-2981,-2819,9948,7145,3395,-88,-8505,7334,-9635,9975,-6273,-5865,-8964,5432,5727,9409,6276,2602,-298,-421,-4140,-9343,8876,1792,-1108,-3235,-9358,-9650,9342,-9135,-399,8310,-4645,242,7174,1146,1162,4300,8865,4108,3597,-7430,3308,-818,-5349,-1731,-4779,-2276,9583,7058,7559,-2448,723,-2123,9824,7585,6396,-4316,7265,1784,1468,-5614,-5724,6731,-7014,2789,-5324,-5396,6648,6454,2289,4126,5901,-8480,-141,-9828,2203,8454,-7759,812,187,-4626,-6773,7139,-5992,-4959,-9168,-8,-6858,-4709,-4385,1783,-1413,7087,8617,-5807,306,-5567,-7546,-9728,6455,-7163,-4293,863,5942,-4816,6754,3403,6003,-4148,-665,8357,-9880,-550,-8469,-1053,-8782,7281,-5561,3412,-1113,-9275,-7157,-806,-7806,-5959,-9678,3565,-8462,-935,-7440,-714,8136,5397,3872,8238,5649,4249,-3722,-6223,-8206,-9373,7095,4731,2026,-4358,-9075,-5220,-2240,5475,-6970,-5608,3077,9612,6577,7081,-324,1363,1147,-335,4748]
kk2 = [3,2,3,1,2,4,5,5,6]
print(Solution().findKthLargest3(kk2, 4))

